name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

env:
  GCVIEWER_VERSION: "${{ github.ref_name }}"

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check tag matches manifest version
        run: |
          MANIFEST_VERSION=$(cargo metadata --format-version=1 --no-deps | jq '.packages[] | select(.name == "gcviewer") | .version')

          if [ "$GCVIEWER_VERSION" != "$MANIFEST_VERSION" ]; then
            echo "Expected gcviewer version and Cargo manifest version to match"
            exit 1
          fi

  release:
    runs-on: windows-latest
    env:
      CARGO_BUILD_TARGET: "x86_64-pc-windows-msvc"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: cargo build --release --no-default-features
      - name: Run Tests
        run: cargo test --no-default-features
      - name: Clippy Lints
        run: cargo clippy --no-default-features
      - name: Compress Artifacts
        run: |
          7z a gcviewer.zip "./target/${{ env.CARGO_BUILD_TARGET }}/release/gcviewer.exe"
          7z a theme.zip ./theme/*
      - name: Automatic Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          draft: true
          files: |
            gcviewer.zip
            theme.zip
